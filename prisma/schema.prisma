// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  location    String
  description String
  imageUrl    String
  plots       Plot[]
  createdAt   DateTime @default(now())
}

model Plot {
  id            String         @id @default(cuid())
  title         String
  dimension     String
  price         Int
  priceLabel    String
  status        PlotStatus     @default(AVAILABLE)
  imageUrls     String[]
  location      String
  latitude      Float
  longitude     Float
  facing        String
  amenities     String[]
  mapEmbedUrl   String?
  description   String         @db.Text
  project       Project        @relation(fields: [projectId], references: [id])
  projectId     String
  visitRequests VisitRequest[]
  createdAt     DateTime       @default(now())
}

model VisitRequest {
  id        String      @id @default(cuid())
  name      String
  email     String
  phone     String
  date      DateTime
  time      String
  status    VisitStatus @default(PENDING)
  qrCode    String? // can be a URL or token
  expiresAt DateTime? // used to expire QR
  plot      Plot        @relation(fields: [plotId], references: [id])
  plotId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // ðŸ‘‡ Add this line for the reverse relation to Feedback
  feedback Feedback?
}

model Feedback {
  id               String   @id @default(cuid())
  bookingId        String   @unique
  rating           Int
  experience       String
  suggestions      String
  purchaseInterest Boolean?
  createdAt        DateTime @default(now())

  booking VisitRequest @relation(fields: [bookingId], references: [id])
}

enum PlotStatus {
  AVAILABLE
  ADVANCE
  SOLD
}

enum VisitStatus {
  PENDING
  APPROVED
  REJECTED
}
